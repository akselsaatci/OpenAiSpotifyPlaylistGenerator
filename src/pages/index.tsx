import Head from "next/head";
import { useRouter } from "next/router";
import {
  Button,
  FormControl,
  Grid,
  InputLabel,
  MenuItem,
  Paper,
  Select,
  TextField,
} from "@mui/material";
import { useState } from "react";
import styles from "@/lib/dall-e-styles";
import Image from "next/image";

export default function Home({ apiKey }: any) {
  // const { data: session, status } = useSession();
  const router = useRouter();
  const [songName, setSongName] = useState("");
  const [playlist, setPlaylist] = useState([]);
  const [imgUrl, setImgUrl] = useState("");
  const [style, setStyle] = useState("Psychedelic");

  const handleSongNameChange = (e: any) => {
    setSongName(e.target.value);
  };
  const handleSubmitButton = async (e: any) => {
    const response = await fetch(`/api/playlist?songName=${songName}`, {
      method: "POST",
    })
      .then((response) => {
        return response.json();
      })
      .then(async (response: any) => {
        const playlist: any = JSON.parse(response);
        const data = JSON.parse(playlist.choices[0].text);
        setPlaylist(() => {
          return data.playlist;
        });
        const imageResponse = await fetch(`/api/image?style=${style}`, {
          method: "POST",
          body: JSON.stringify({ prompt: playlist.dall }),
        })
          .then((response) => {
            return response.json();
          })
          .then(async (response: any) => {
            const data = JSON.parse(response);
            setImgUrl(data.data[0].url);
          });
      });
  };

  const handleRadioChange = (e: any) => {
    setStyle(e.target.value);
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="container mx-auto justify-center h-screen items-center flex ">
          <Paper
            className="p-10 py-7 w-1/2 overflow-y-scroll"
            style={{ maxHeight: "88%" }}
            elevation={3}
          >
            <h1 className="text-3xl font-bold text-center">
              Playlist Generator
            </h1>
            <Grid container rowSpacing={1} columnGap={0}>
              <Grid xs={12} item>
                <TextField
                  className="w-full mt-7 pr-2"
                  label="Song Name"
                  type="Text"
                  name="songName"
                  variant="outlined"
                  value={songName}
                  onChange={handleSongNameChange}
                  required
                ></TextField>
              </Grid>
              <FormControl className="mt-10 w-full pr-2">
                <InputLabel id="demo-simple-select-label">Stlye</InputLabel>
                <Select
                  labelId="demo-simple-select-label"
                  id="demo-simple-select"
                  label="Style"
                  value={style}
                  onChange={handleRadioChange}
                >
                  {styles.map((item: any) => (
                    <MenuItem key={item} value={item}>
                      {item}
                    </MenuItem>
                  ))}
                </Select>
              </FormControl>
              <Button
                className="w-full mt-7 bg-blue-900"
                color="primary"
                variant="contained"
                type="submit"
                onClick={handleSubmitButton}
              >
                Generate List
              </Button>
            </Grid>
            {playlist.length > 0 &&
              playlist.map((item: any) => (
                <p key={item.title}>
                  {item.artist} , {item.title}
                </p>
              ))}
            {imgUrl && <Image src={imgUrl} alt="Playlist Image" />}
          </Paper>
        </div>
      </main>
    </>
  );
}

// export const getServerSideProps: GetServerSideProps = async (ctx) => {

// };
